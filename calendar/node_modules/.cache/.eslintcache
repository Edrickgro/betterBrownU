[{"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/index.tsx":"1","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/reportWebVitals.ts":"2","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/App.tsx":"3","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Calendar.tsx":"4","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Date.tsx":"5","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Event.tsx":"6","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/CalendarFB.ts":"7"},{"size":554,"mtime":1650942382563,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1650942382563,"results":"10","hashOfConfig":"9"},{"size":219,"mtime":1650942382563,"results":"11","hashOfConfig":"9"},{"size":3842,"mtime":1651590275517,"results":"12","hashOfConfig":"9"},{"size":958,"mtime":1650942382563,"results":"13","hashOfConfig":"9"},{"size":560,"mtime":1650942382563,"results":"14","hashOfConfig":"9"},{"size":4366,"mtime":1651612118448,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"dd1jzb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/index.tsx",[],[],[],"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/reportWebVitals.ts",[],[],"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/App.tsx",[],[],"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Calendar.tsx",["39","40","41","42","43","44"],[],"import React, {useState} from 'react'\nimport Date from \"./Date\"\nimport {getAllDates, writeNewEvent} from './CalendarFB'\n\n//TODO is there a way to have this be a global type so I don't have to reimport\ntype event = {\n    eventName : string;\n    startTime : string;\n    endTime : string;\n    info : string;\n}\n\ntype dateInfo = {\n    date : string;\n    events : event[];\n}\n\n/**\n * Returns the construction of a full calendar app div object, in theory containing rows of dates and the events\n * contained within each.\n * @constructor\n */\nfunction Calendar () {\n    const [dateList, setDateList] = useState<dateInfo[]>()\n\n    function load_data () {\n        setDateList(getCalendarInfo());\n    }\n\n    //TODO: figure out how to write a customizeable event\n    function default_event () { \n      let event1 =  {\n        eventName: \"sport1\",\n        startTime: \"8:00am\",\n        endTime: \"10:00am\",\n        info: \"it's behind the OMAC\"\n    }\n    writeNewEvent(event1, \"2022-05-01\")\n    }\n\n    function getCalendarInfo() : dateInfo[]{\n        let event1 =  {\n            eventName: \"sport1\",\n            startTime: \"8:00am\",\n            endTime: \"10:00am\",\n            info: \"it's behind the OMAC\"\n        }\n        let event2 = {\n            eventName: \"sport2\",\n            startTime: \"5:00pm\",\n            endTime: \"7:30pm\",\n            info: \"brown school spirit rah rah\"\n        }\n        let event3 = {\n            eventName: \"acapella\",\n            startTime: \"9:00pm\",\n            endTime: \"11:00pm\",\n            info: \"we have so many acapella troupes at this school\"\n        }\n        let event4 = {\n            eventName: \"concert\",\n            startTime: \"3:00pm\",\n            endTime: \"7:00pm\",\n            info: \"I feel like we have more theaters than we use\"\n        }\n        let event5 = {\n            eventName: \"Bill Clinton Speaking??\",\n            startTime: \"5pm\",\n            endTime: \"6pm\",\n            info: \"located somewhere in watson\"\n        }\n\n\n        // getAllDates()\n        let dateInfoList : dateInfo[] = getAllDates()\n        let fakeDatesArr : dateInfo[] \n\n        // hardcoded events\n        // let eventList1 : event[] = [event1, event2]\n        // let eventList2 : event[] = [event3, event4]\n        // let eventList3 : event[] = [event5]\n        // let date1 : dateInfo = {date: \"10/31/2001\", events: eventList1}\n        // let date2 : dateInfo = {date: \"2/13/2002\", events: eventList2}\n        // let date3 : dateInfo = {date: \"6/14/2002\", events: eventList3}\n        \n        // fakeDatesArr = [date1, date2, date3];\n\n        fakeDatesArr = dateInfoList\n        // TODO: weird bug\n        // Whenever I use the dateInfo[] that my getAllDates returns, then I have to click twice to see the events\n        // However, whenever the fakeDates that are hardcoded are used, only one click is needed\n        // LIST has size 0 until the second button click (even if function is called twice in the code)\n        console.log(\"dateInfoList is not empty: \" + (dateInfoList.length != 0))\n        return fakeDatesArr;\n    }\n\n    /**\n     * Generate the date row objects based on what is gotten from the state.\n     */\n    function generateDates() {\n        if (dateList === undefined) {\n            return <p>Dates have not been generated yet</p>\n        } else {\n            let dates = [];\n            for (let i = 0; i<dateList.length; i++) {\n                dates.push(<Date date={dateList[i].date} events={dateList[i].events}/>);\n            }\n            return dates;\n        }\n    }\n\n    return (\n        <div className={\"calendar\"}>\n            <button onClick={load_data}>Click to load!</button>\n            <button onClick={default_event}>Click to add default event</button>\n            <div id={\"date-list\"}>\n                {generateDates()}\n            </div>\n        </div>\n    )\n}\n\nexport default Calendar","/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Date.tsx",[],[],"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/Event.tsx",[],[],"/home/ivan/github/cs32/term-project-ckaleel-eguerre1-hzheng29-ihuerta-nmcgrego/calendar/src/CalendarFB.ts",["45","46","47","48","49","50","51","52","53"],[],{"ruleId":"54","severity":1,"message":"55","line":42,"column":13,"nodeType":"56","messageId":"57","endLine":42,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":48,"column":13,"nodeType":"56","messageId":"57","endLine":48,"endColumn":19},{"ruleId":"54","severity":1,"message":"59","line":54,"column":13,"nodeType":"56","messageId":"57","endLine":54,"endColumn":19},{"ruleId":"54","severity":1,"message":"60","line":60,"column":13,"nodeType":"56","messageId":"57","endLine":60,"endColumn":19},{"ruleId":"54","severity":1,"message":"61","line":66,"column":13,"nodeType":"56","messageId":"57","endLine":66,"endColumn":19},{"ruleId":"62","severity":1,"message":"63","line":93,"column":74,"nodeType":"64","messageId":"65","endLine":93,"endColumn":76},{"ruleId":"54","severity":1,"message":"66","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":17},{"ruleId":"54","severity":1,"message":"67","line":36,"column":7,"nodeType":"56","messageId":"57","endLine":36,"endColumn":10},{"ruleId":"54","severity":1,"message":"68","line":80,"column":10,"nodeType":"56","messageId":"57","endLine":80,"endColumn":23},{"ruleId":"54","severity":1,"message":"69","line":100,"column":9,"nodeType":"56","messageId":"57","endLine":100,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":100,"column":44,"nodeType":"64","messageId":"72","endLine":100,"endColumn":45},{"ruleId":"54","severity":1,"message":"73","line":101,"column":9,"nodeType":"56","messageId":"57","endLine":101,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":101,"column":45,"nodeType":"64","messageId":"72","endLine":101,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":120,"column":28,"nodeType":"76","messageId":"77","endLine":125,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":129,"column":24,"nodeType":"76","messageId":"77","endLine":132,"endColumn":9},"@typescript-eslint/no-unused-vars","'event1' is assigned a value but never used.","Identifier","unusedVar","'event2' is assigned a value but never used.","'event3' is assigned a value but never used.","'event4' is assigned a value but never used.","'event5' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Console' is defined but never used.","'app' is assigned a value but never used.","'getDateEvents' is defined but never used.","'swRef' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'badRef' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as event' instead of '<event>'.","TSTypeAssertion","as","Use 'as dateInfo' instead of '<dateInfo>'."]